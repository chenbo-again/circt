module {
  moore.module @Expressions() {
    moore.procedure initial {
      %j = moore.variable : <i32>
      %a = moore.variable : <i32>
      %b = moore.variable : <i32>
      %c = moore.variable : <i32>
      %up = moore.variable : <uarray<4 x l11>>
      %p1 = moore.variable : <l11>
      %p2 = moore.variable : <l11>
      %p3 = moore.variable : <l11>
      %p4 = moore.variable : <l11>
      %yy = moore.variable : <i96>
      %dd = moore.variable : <i100>
      %0 = moore.read %j : <i32>
      moore.blocking_assign %a, %0 : i32
      %1 = moore.read %j : <i32>
      %2 = moore.extract %1 from 0 : i32 -> i8
      %3 = moore.extract %1 from 8 : i32 -> i8
      %4 = moore.extract %1 from 16 : i32 -> i8
      %5 = moore.extract %1 from 24 : i32 -> i8
      %6 = moore.concat %2, %3, %4, %5 : (!moore.i8, !moore.i8, !moore.i8, !moore.i8) -> i32
      moore.blocking_assign %a, %6 : i32
      %7 = moore.read %j : <i32>
      %8 = moore.extract %7 from 0 : i32 -> i16
      %9 = moore.extract %7 from 16 : i32 -> i16
      %10 = moore.concat %8, %9 : (!moore.i16, !moore.i16) -> i32
      moore.blocking_assign %a, %10 : i32
      %11 = moore.constant 53 : i8
      %12 = moore.extract %11 from 0 : i8 -> i1
      %13 = moore.extract %11 from 1 : i8 -> i1
      %14 = moore.extract %11 from 2 : i8 -> i1
      %15 = moore.extract %11 from 3 : i8 -> i1
      %16 = moore.extract %11 from 4 : i8 -> i1
      %17 = moore.extract %11 from 5 : i8 -> i1
      %18 = moore.extract %11 from 6 : i8 -> i1
      %19 = moore.extract %11 from 7 : i8 -> i1
      %20 = moore.concat %12, %13, %14, %15, %16, %17, %18, %19 : (!moore.i1, !moore.i1, !moore.i1, !moore.i1, !moore.i1, !moore.i1, !moore.i1, !moore.i1) -> i8
      %21 = moore.zext %20 : i8 -> i32
      moore.blocking_assign %a, %21 : i32
      %22 = moore.constant -11 : i6
      %23 = moore.extract %22 from 0 : i6 -> i4
      %24 = moore.extract %22 from 4 : i6 -> i2
      %25 = moore.concat %23, %24 : (!moore.i4, !moore.i2) -> i6
      %26 = moore.zext %25 : i6 -> i32
      moore.blocking_assign %a, %26 : i32
      %27 = moore.constant -11 : i6
      %28 = moore.zext %27 : i6 -> i32
      moore.blocking_assign %a, %28 : i32
      %29 = moore.constant -3 : i4
      %30 = moore.extract %29 from 0 : i4 -> i1
      %31 = moore.extract %29 from 1 : i4 -> i1
      %32 = moore.extract %29 from 2 : i4 -> i1
      %33 = moore.extract %29 from 3 : i4 -> i1
      %34 = moore.concat %30, %31, %32, %33 : (!moore.i1, !moore.i1, !moore.i1, !moore.i1) -> i4
      %35 = moore.extract %34 from 0 : i4 -> i2
      %36 = moore.extract %34 from 2 : i4 -> i2
      %37 = moore.concat %35, %36 : (!moore.i2, !moore.i2) -> i4
      %38 = moore.zext %37 : i4 -> i32
      moore.blocking_assign %a, %38 : i32
      %39 = moore.read %a : <i32>
      %40 = moore.read %b : <i32>
      %41 = moore.read %c : <i32>
      %42 = moore.concat %39, %40, %41 : (!moore.i32, !moore.i32, !moore.i32) -> i96
      moore.blocking_assign %yy, %42 : i96
      %43 = moore.read %a : <i32>
      %44 = moore.read %b : <i32>
      %45 = moore.read %c : <i32>
      %46 = moore.concat %43, %44, %45 : (!moore.i32, !moore.i32, !moore.i32) -> i96
      %47 = moore.zext %46 : i96 -> i100
      moore.blocking_assign %dd, %47 : i100
      %48 = moore.concat_ref %a, %b, %c : (!moore.ref<i32>, !moore.ref<i32>, !moore.ref<i32>) -> <i96>
      %49 = moore.constant 1 : i96
      moore.blocking_assign %48, %49 : i96
      %50 = moore.concat_ref %a, %b, %c : (!moore.ref<i32>, !moore.ref<i32>, !moore.ref<i32>) -> <i96>
      %51 = moore.constant 31 : i100
      %52 = moore.trunc %51 : i100 -> i96
      moore.blocking_assign %50, %52 : i96
      %53 = moore.concat_ref %p1, %p2, %p3, %p4 : (!moore.ref<l11>, !moore.ref<l11>, !moore.ref<l11>, !moore.ref<l11>) -> <l44>
      %54 = moore.read %up : <uarray<4 x l11>>
      %55 = moore.conversion %54 : !moore.uarray<4 x l11> -> !moore.l44
      moore.blocking_assign %53, %55 : l44
      %56 = moore.extract_ref %a from 0 : <i32> -> <i8>
      %57 = moore.extract_ref %a from 8 : <i32> -> <i8>
      %58 = moore.extract_ref %a from 16 : <i32> -> <i8>
      %59 = moore.extract_ref %a from 24 : <i32> -> <i8>
      %60 = moore.concat_ref %59, %58, %57, %56 : (!moore.ref<i8>, !moore.ref<i8>, !moore.ref<i8>, !moore.ref<i8>) -> <i32>
      %61 = moore.constant 1 : i32
      moore.blocking_assign %60, %61 : i32
      moore.return
    }
    moore.output
  }
}
